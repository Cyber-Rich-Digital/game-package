definitions:
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  main.ping:
    properties:
      message:
        example: pong
        type: string
    type: object
  model.CreateUser:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.Login:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.Pagination:
    properties:
      list: {}
      total:
        type: integer
    type: object
  model.Success:
    properties:
      message:
        example: success
        type: string
    type: object
  model.SuccessWithToken:
    properties:
      message:
        example: success
        type: string
      token: {}
    type: object
info:
  contact: {}
paths:
  /api/be/promotions:
    get:
      consumes:
      - application/json
      description: Get all promotions
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Pagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all promotions
      tags:
      - Back Promotion
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SuccessWithToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - Front Auth
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ping'
      summary: ping example
      tags:
      - Test
  /promotions:
    get:
      consumes:
      - application/json
      description: Get all promotions
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Order
        in: query
        name: order
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Pagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all promotions
      tags:
      - Front Promotion
  /register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register
      tags:
      - Front Auth
  /users/:id:
    get:
      consumes:
      - application/json
      description: User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get user
      tags:
      - Front User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
