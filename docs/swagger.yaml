definitions:
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  main.ping:
    properties:
      message:
        example: pong
        type: string
    type: object
  model.AdminCreateGroup:
    properties:
      groupId:
        type: integer
      permissionIds:
        items:
          type: integer
        type: array
    required:
    - groupId
    - permissionIds
    type: object
  model.CreateAdmin:
    type: object
  model.CreateGroup:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.CreatePermission:
    properties:
      permissions:
        items:
          $ref: '#/definitions/model.PermissionName'
        type: array
    required:
    - permissions
    type: object
  model.LoginAdmin:
    properties:
      ip:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
      username:
        maxLength: 30
        minLength: 8
        type: string
    required:
    - password
    - username
    type: object
  model.LoginResponse:
    properties:
      token:
        type: string
    type: object
  model.PermissionName:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.Success:
    properties:
      message:
        type: string
    type: object
  model.SuccessWithData:
    properties:
      data: {}
      message:
        type: string
    type: object
  model.SuccessWithList:
    properties:
      list: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /admins/create:
    post:
      consumes:
      - application/json
      description: Create Admin
      parameters:
      - description: Create Admin
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.CreateAdmin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Admin
      tags:
      - Admins
  /admins/creategroup:
    post:
      consumes:
      - application/json
      description: Create Group
      parameters:
      - description: Create Group
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.AdminCreateGroup'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Group
      tags:
      - Admins
  /admins/group:
    get:
      consumes:
      - application/json
      description: Group List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessWithList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Group List
      tags:
      - Admins
  /admins/group/{id}:
    get:
      consumes:
      - application/json
      description: Get Group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessWithData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Group
      tags:
      - Admins
  /groups/create:
    post:
      consumes:
      - application/json
      description: Create Group
      parameters:
      - description: Create Group
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.CreateGroup'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Group
      tags:
      - Groups
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.LoginAdmin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /permissions/create:
    post:
      consumes:
      - application/json
      description: Create Permission
      parameters:
      - description: Create Permission
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.CreatePermission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Permission
      tags:
      - Permissions
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ping'
      summary: ping example
      tags:
      - Test
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
